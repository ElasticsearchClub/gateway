path.data: data
path.logs: log

#api:
#  enabled: true
#  network:
#    binding: 127.0.0.1:2900

#log.level: trace
#log.debug: true

entry:
  - name: my_es_entry
    enabled: true
    router: my_router
    max_concurrency: 200000
    network:
      binding: 0.0.0.0:8000
#    tls:
#      enabled: true
flow:
  - name: echo
    filter_v2:
      - set_response:
          when:
            equals:
              _ctx.request.path: /favicon.ico
          status: 404
          content_type: "text/plain; charset=utf-8"
          body: "oops, favicon.ico"
      - set_response:
          when:
            equals:
              _ctx.request.path: /
          status: 404
          content_type: "text/plain; charset=utf-8"
          body: "root path"
#      - set_response_header:
#          headers:
#            - Env -> Dev
#      - dump_context:
#          context:
#            - _ctx.id
#            - _ctx.tls
#            - _ctx.remote_addr
#            - _ctx.local_addr
#            - _ctx.request.host
#            - _ctx.request.method
#            - _ctx.request.uri
#            - _ctx.request.path
#            - _ctx.request.body
#            - _ctx.request.body_length
#            - _ctx.request.query_args.from
#            - _ctx.request.query_args.size
#            - _ctx.request.header.Accept
#            - _ctx.request.user
#            - _ctx.response.status
#            - _ctx.response.body
#            - _ctx.response.content_type
#            - _ctx.response.body_length
#            - _ctx.response.header.Env
  - name: cache_first
    filter: #comment out any filter sections, like you don't need cache or rate-limiter
      - name: translog
        parameters:
          category: dev
          filename: translog.log
          compress: true
#          max_file_age: 2
          max_file_count: 50
          max_file_size_in_mb: 1024
      - name: get_cache
        parameters:
          pass_patterns:
            - _cat
      - name: elasticsearch
        parameters:
          elasticsearch: dev  #elasticsearch configure reference name
          max_connection_per_host: 100 #max tcp connection to upstream, default for all nodes
          max_response_size: -1 #default for all nodes
          balancer: weight
          refresh: # refresh upstream nodes list, need to enable this feature to use elasticsearch nodes auto discovery
            enabled: true
            interval: 60s
          filter:
            tags:
                exclude:
                - temp: cold
            roles:
              exclude:
                - master
      - name: set_cache
        parameters:
          cache_ttl: 30s
  - name: request_logging # this flow is used for request logging, refer to `router`'s `tracing_flow`
    filter:
      - name: request_logging
        parameters:
          queue_name: request_logging
          max_request_body_size: 1024
          max_response_body_size: 1024
#          min_elapsed_time_in_ms: 500 # only record slow requests
          bulk_stats_details: true
router:
  - name: my_router
#    default_flow: echo
    default_flow: cache_first
    tracing_flow: request_logging
#    rules:
#      - method:
#          - "POST"
#        pattern:
#          - /_bulk
#        flow:
#          - online_indexing_merge


elasticsearch:
- name: dev
  enabled: true
  endpoint: http://localhost:9200 # if your elasticsearch is using https, your gateway should be listen on as https as well
#  traffic_control: #global traffic control
#    max_bps_per_node: 102400 #max total bytes send to es per node
#    max_qps_per_node: 1000 #max total requests send to es per node
  basic_auth: #used to discovery full cluster nodes, or check elasticsearch's health and versions
    username: test
    password: testtest
#  discovery: # auto discovery elasticsearch cluster nodes
#    enabled: true
#    refresh:
#      enabled: true
#      interval: 60s

#elastic:
#  elasticsearch: dev
#  store:
#    enabled: true
#  monitoring:
#    enabled: false
#  orm:
#    enabled: true
#    init_template: true
#    template_name: ".gateway-default"
#    index_prefix: "gateway_"

pipelines:
- name: request_logging_index
  enabled: true
  max_go_routine: 1
  threshold_in_ms: 0
  timeout_in_ms: 5000
  start:
    joint: json_indexing
    enabled: true
    parameters:
      index_name: "gateway_requests"
      elasticsearch: "dev"
      input_queue: "request_logging"
      timeout: "1s"
      worker_size: 1
      bulk_size_in_mb: 1 #in MB
- name: bulk_request_ingest
  enabled: true
  max_go_routine: 10
  threshold_in_ms: 0
  timeout_in_ms: 5000
  start:
    joint: bulk_indexing
    enabled: true
    parameters:
      elasticsearch: "dev"
      compress: true
      worker_size: 1
      bulk_size_in_mb: 1  #in MB
#      bulk_size_in_kb: 50  #in KB
      idle_timeout_in_second: 1
      retry_delay_in_second: 5
      warm_retry_message: true
      log_bulk_message: false
      error_message_truncate_size: 1024
      dead_letter_queue: "failed_bulk_messages"


floating_ip:
  enabled: false
#  ip: 192.168.3.234      #yep, it's optional, infini-gateway could detect one but maybe not the right one
##  netmask: 255.255.255.0 #optional
##  interface: en1         #optional

#statsd:
#  enabled: false
#  host: 192.168.3.98
#  port: 8125
#  namespace: gateway.

queue:
  min_msg_size: 1
  max_msg_size: 1000000000
  max_bytes_per_file: 1073741824
  sync_every_records: 1000 # sync by records count
  sync_timeout_in_ms: 1000 # sync by time in million seconds
  write_chan_buffer: 0
  read_chan_buffer: 0
