path.data: data
path.logs: log
#log.level: trace
#log.debug: true

#api:
#  enabled: true
#  network:
#    binding: 127.0.0.1:2900

entry:
  - name: my_es_entry
    enabled: true
    router: my_router
    max_concurrency: 1000
    network:
      binding: 0.0.0.0:8000
#    tls:
#      enabled: true

flow:
  - name: hello_world
    filter:
      - echo:
      - echo:
  - name: not_found
    filter:
      - echo:
          str: '404 not found\n'
          repeat: 1
  - name: default_flow
    filter:
      - get_cache:
      - bulk_reshuffle:
          when:
            contains:
              _ctx.request.path: /_bulk
          elasticsearch: dev
          level: node
          mode: async
          fix_null_id: true
      - elasticsearch:
          elasticsearch: dev  #elasticsearch configure reference name
          max_connection_per_host: 100 #max tcp connection to upstream, default for all nodes
          max_response_size: -1 #default for all nodes
          balancer: weight
          refresh: # refresh upstream nodes list, need to enable this feature to use elasticsearch nodes auto discovery
            enabled: true
            interval: 60s
      - set_cache:
      - dump:
          request: true
  - name: logging # this flow is used for request logging, refer to `router`'s `tracing_flow`
    filter:
#      - stats:
#      - logging:
#          queue_name: request_logging
#          max_request_body_size: 1024
#          max_response_body_size: 1024
#          when: #1s or none-200 requests will be logged
#            or:
#              - not:
#                  or:
#                    - equals:
#                        _ctx.request.path: "/favicon.ico"
#                    - equals:
#                        _ctx.response.status: 200
#                    - in:
#                        _ctx.request.path: ["/sw.js"]
#              - range:
#                  _ctx.elapsed.gte: 10
router:
  - name: my_router
    default_flow: default_flow
    tracing_flow: logging
#    rules:
#      - method:
#          - GET
#        pattern:
#          - "/{name:[a-zA-Z]}_abc/_bulk"
#        flow:
#          - echo


elasticsearch:
- name: dev
  enabled: true
  schema: http
  hosts:
    - 192.168.3.188:9206
    - 192.168.3.188:9216
  traffic_control: #global traffic control
    max_bps_per_node: 209715200 #max total bytes send to es per node, 200MB/s
    max_qps_per_node: 20000 #max total requests send to es per node, 20k/s
  basic_auth: #used to discovery full cluster nodes, or check elasticsearch's health and versions
    username: test
    password: testtest
  discovery: # auto discovery elasticsearch cluster nodes
    enabled: true
    refresh:
      enabled: true
      interval: 60s

#pipelines_v2:
#  - name: index_diff_service
#    processors:
#    - echo: #ready, set, go
#        message: read,set,go
#    - dag:
#        mode: first_win #first_win, wait_all
#        parallel:
#          - echo: #player1
#              message: player1
#          - echo: #player2
#              message: player2
#          - echo: #player3
#              message: player3
#        end:
#          - echo: #checking score
#              message: checking score
#          - echo: #announce champion
#              message: 'announce champion'
#    - echo: #done
#        message: racing finished

pipelines_v2:
- name: request_logging_index
  auto_start: true
  keep_running: true
  processors:
    - json_indexing:
        index_name: "gateway_requests"
        elasticsearch: "dev"
        input_queue: "request_logging"
        idle_timeout_in_seconds: 1
        worker_size: 1
        bulk_size_in_mb: 10 #in MB
- name: bulk_request_ingest
  auto_start: true
  keep_running: true
  processors:
    - bulk_indexing:
        elasticsearch: "dev"
        compress: true
        worker_size: 1
        bulk_size_in_mb: 1  #in MB
        retry_delay_in_seconds: 5
#        process_failure_queue: true #process failed bulk messages
#        queues: #process other bulk queue
#          - dev-node-failure


floating_ip:
  enabled: false
#  ip: 192.168.3.234      #yep, it's optional, infini-gateway could detect one but maybe not the right one
##  netmask: 255.255.255.0 #optional
##  interface: en1         #optional

#statsd:
#  enabled: true
#  host: 127.0.0.1
#  port: 8125
#  protocol: udp
#  namespace: gateway.
#  buffer_size: 102400

#redis:
#  enabled: true
#  host: localhost
#  port: 6379
#
#queue:
#  - name: dev-node-yNgVusnXSgqvP2fZeGFSLw
#    type: redis

#disk_queue:
#  max_bytes_per_file: 1073741824
