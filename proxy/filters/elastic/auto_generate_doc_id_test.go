/* Copyright Â© INFINI LTD. All rights reserved.
 * Web: https://infinilabs.com
 * Email: hello#infini.ltd */

package elastic

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestAutoGenerateDocID(t *testing.T) {
	//PUT /<target>/_doc/<_id>
	//POST /<target>/_doc/
	//POST /<target>/_create/<_id>
	//PUT twitter/tweet/1/_create
	//POST twitter/tweet/

	path:="/index/doc/"
	valid,urlLevelIndex, urlLevelType,urlLevelID := ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"doc",urlLevelType)
	assert.Equal(t,"",urlLevelID)


	path="/index/doc"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"doc",urlLevelType)
	assert.Equal(t,"",urlLevelID)

	path="/index/_doc"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"_doc",urlLevelType)
	assert.Equal(t,"",urlLevelID)

	path="/index/_doc/"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"_doc",urlLevelType)
	assert.Equal(t,"",urlLevelID)

	path="/index/doc/1"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"doc",urlLevelType)
	assert.Equal(t,"1",urlLevelID)

	path="/index/_doc/1"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"_doc",urlLevelType)
	assert.Equal(t,"1",urlLevelID)

	path="/index/_create/1"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"_create",urlLevelType)
	assert.Equal(t,"1",urlLevelID)

	path="/index/_doc/1"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,true,valid)
	assert.Equal(t,"index",urlLevelIndex)
	assert.Equal(t,"_doc",urlLevelType)
	assert.Equal(t,"1",urlLevelID)

	path="/index/_doc/_bulk"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,false,valid)

	path="/index/_doc/_search"
	valid,urlLevelIndex, urlLevelType,urlLevelID = ParseURLMeta(path)
	assert.Equal(t,false,valid)



}
