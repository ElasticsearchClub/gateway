// Code generated by capnpc-go. DO NOT EDIT.

package captn

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Request struct{ capnp.Struct }

// Request_TypeID is the unique identifier for the type Request.
const Request_TypeID = 0xe79d7f13a229b38b

func NewRequest(s *capnp.Segment) (Request, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Request{st}, err
}

func NewRootRequest(s *capnp.Segment) (Request, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Request{st}, err
}

func ReadRootRequest(msg *capnp.Message) (Request, error) {
	root, err := msg.RootPtr()
	return Request{root.Struct()}, err
}

func (s Request) String() string {
	str, _ := text.Marshal(0xe79d7f13a229b38b, s.Struct)
	return str
}

func (s Request) Method() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Request) HasMethod() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Request) SetMethod(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Request) Url() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Request) HasUrl() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Request) SetUrl(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Request) Body() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s Request) HasBody() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Request) SetBody(v []byte) error {
	return s.Struct.SetData(2, v)
}

func (s Request) Timestamp() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s Request) HasTimestamp() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Request) SetTimestamp(v []byte) error {
	return s.Struct.SetData(3, v)
}

// Request_List is a list of Request.
type Request_List struct{ capnp.List }

// NewRequest creates a new list of Request.
func NewRequest_List(s *capnp.Segment, sz int32) (Request_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Request_List{l}, err
}

func (s Request_List) At(i int) Request { return Request{s.List.Struct(i)} }

func (s Request_List) Set(i int, v Request) error { return s.List.SetStruct(i, v.Struct) }

func (s Request_List) String() string {
	str, _ := text.MarshalList(0xe79d7f13a229b38b, s.List)
	return str
}

// Request_Promise is a wrapper for a Request promised by a client call.
type Request_Promise struct{ *capnp.Pipeline }

func (p Request_Promise) Struct() (Request, error) {
	s, err := p.Pipeline.Struct()
	return Request{s}, err
}

type RequestGroup struct{ capnp.Struct }

// RequestGroup_TypeID is the unique identifier for the type RequestGroup.
const RequestGroup_TypeID = 0xe5a45ce8aa7437fc

func NewRequestGroup(s *capnp.Segment) (RequestGroup, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestGroup{st}, err
}

func NewRootRequestGroup(s *capnp.Segment) (RequestGroup, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RequestGroup{st}, err
}

func ReadRootRequestGroup(msg *capnp.Message) (RequestGroup, error) {
	root, err := msg.RootPtr()
	return RequestGroup{root.Struct()}, err
}

func (s RequestGroup) String() string {
	str, _ := text.Marshal(0xe5a45ce8aa7437fc, s.Struct)
	return str
}

func (s RequestGroup) Requests() (Request_List, error) {
	p, err := s.Struct.Ptr(0)
	return Request_List{List: p.List()}, err
}

func (s RequestGroup) HasRequests() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RequestGroup) SetRequests(v Request_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRequests sets the requests field to a newly
// allocated Request_List, preferring placement in s's segment.
func (s RequestGroup) NewRequests(n int32) (Request_List, error) {
	l, err := NewRequest_List(s.Struct.Segment(), n)
	if err != nil {
		return Request_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// RequestGroup_List is a list of RequestGroup.
type RequestGroup_List struct{ capnp.List }

// NewRequestGroup creates a new list of RequestGroup.
func NewRequestGroup_List(s *capnp.Segment, sz int32) (RequestGroup_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RequestGroup_List{l}, err
}

func (s RequestGroup_List) At(i int) RequestGroup { return RequestGroup{s.List.Struct(i)} }

func (s RequestGroup_List) Set(i int, v RequestGroup) error { return s.List.SetStruct(i, v.Struct) }

func (s RequestGroup_List) String() string {
	str, _ := text.MarshalList(0xe5a45ce8aa7437fc, s.List)
	return str
}

// RequestGroup_Promise is a wrapper for a RequestGroup promised by a client call.
type RequestGroup_Promise struct{ *capnp.Pipeline }

func (p RequestGroup_Promise) Struct() (RequestGroup, error) {
	s, err := p.Pipeline.Struct()
	return RequestGroup{s}, err
}

const schema_a99aba6cb134a1c0 = "x\xda\\\x8d\xb1J\xc3P\x18\x85\xcf\xb975\"V" +
	"{1O\xe0\xa4\x0e\x8a \x08]\xaa\x93 \x08\xfd;" +
	"w0\xb6\x17ZH\xda\x98\xdcB\x9d\xc4Q\xc4\x17\x10" +
	"\x1c\x14\x17\xdd\xc4Ap\xf2Y\x04\xa9\x0f!D\xa2\xa4" +
	"B\xa7\xff?\x87\x8f\xf3\xd5\xc6{\xcaT^\x01\x99\xaf" +
	"\xcc\xe5\xdf\xbb\xee\xe9\xab\xfd\xf0\x09\x130\x7f\xbf\xdby" +
	"\x8e\xden\x1eQ\xa1\x0fl\xef/\xd0\x88\x0f\x98\xa3\x06" +
	"\x98_\xbd\xac\xdf\xaf\x9c\xdfNfH\xaf\x00.>\xcc" +
	"uq/'`\xde\x09\x137\xd8J\xad>\x1d\xd9\xcc" +
	"mv\xc2d\x90\xd4[\xf67\x1d\xa4\xc3Q\x024I" +
	"\xf1\xb4\x07x\x04L\xf5\x10\x90EMYS\xcc\xd3?" +
	"0\x03\xc0%\xb0\xa9\xc9\xda\xbf\x1b,\xca\xa9B\xcd*" +
	"|\x9b\xb9b\xbc6\x1d\x0f\xeb\x80\xb45\xa5\xa7h\xc8" +
	"\x80EiW\x019\xd6\x94H\xd1(\x15P\x01\xa6\xbf" +
	"\x01HWS\x12E\xa3u@\x0d\x98\xb8\x05H\xa4)" +
	"c\xc5Fl]o\xd8e\x15\x8aU\xd0\x1f\xa5Q\xf9" +
	"/\x9f\x0c\xbbge\xc8]?\xb6\x99\x0bc0)\xbb" +
	"\x9f\x00\x00\x00\xff\xff3xX\xb9"

func init() {
	schemas.Register(schema_a99aba6cb134a1c0,
		0xe5a45ce8aa7437fc,
		0xe79d7f13a229b38b)
}
