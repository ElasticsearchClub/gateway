pipeline {

    agent {label 'master'}

    environment {
        CI = 'true'
    }
    stages {

       stage('build') {

        parallel {

        stage('Build Docker Images') {

                    agent {
                        label 'linux'
                    }

                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                            sh label: 'docker-build', script: 'cd /home/jenkins/go/src/infini.sh/gateway/ && make build && chmod a+x bin/gateway'
                            sh label: 'docker-build', script: 'cd /home/jenkins/go/src/infini.sh/gateway/bin && docker build -t infini-gateway  -f ../docker/Dockerfile .'
                            sh label: 'docker-tagging', script: 'docker tag infini-gateway infinilabs/gateway:latest && docker tag infini-gateway infinilabs/gateway:$VERSION-$BUILD_NUMBER'
                            sh label: 'docker-push', script: 'docker push infinilabs/gateway:$VERSION-$BUILD_NUMBER && docker push infinilabs/gateway:latest'
                        }
                    }
                }
    } }
    }
}
